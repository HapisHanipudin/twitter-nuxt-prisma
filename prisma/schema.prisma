generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  name         String?
  email        String         @unique
  createdAt    DateTime       @default(now())
  password     String
  profileImage String?
  updatedAt    DateTime       @updatedAt
  username     String         @unique
  refreshToken RefreshToken[]
  posts        Post[]
  mediaFiles   mediaFiles[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Post {
  id      String @id @default(uuid())
  caption String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  replyToId  String?
  replyTo    Post?        @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies    Post[]       @relation("replies")
  mediaFiles mediaFiles[]
}

model mediaFiles {
  id               String @id @default(uuid())
  url              String
  providerPublicId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  post   Post?   @relation(fields: [postId], references: [id])
  postId String?
}
